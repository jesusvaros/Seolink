name: Automated Content Generation

on:
  schedule:
    # Run every day at 9 AM UTC (adjust timezone as needed)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  generate-content:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd generate-mdx && npm ci
        cd ../tiktok-generator && npm ci

    - name: Install Playwright browsers
      run: |
        cd generate-mdx
        npx playwright install chromium
        npx playwright install-deps chromium

    - name: Run content generation
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        NODE_ENV: production
        # Network timeout settings
        NODE_OPTIONS: '--max-old-space-size=4096'
        # Add other environment variables as needed
      timeout-minutes: 30
      run: |
        # Create log directory
        mkdir -p logs
        
        # Verify OpenAI API key is available
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "❌ OPENAI_API_KEY not found in secrets"
          exit 1
        fi
        
        # Add fresh URLs for today
        echo "Adding fresh URLs for today..."
        cd generate-mdx && node add-fresh-urls.js && cd ..
        
        # Run the content generation scripts with retry logic
        echo "Starting automated content generation..."
        
        # Try content generation with retries
        for i in {1..3}; do
          echo "Attempt $i of 3..."
          if timeout 20m npm run content:generate; then
            echo "✅ Content generation completed successfully"
            break
          else
            echo "⚠️ Attempt $i failed, waiting before retry..."
            if [ $i -lt 3 ]; then
              sleep 30
            else
              echo "❌ All attempts failed"
              exit 1
            fi
          fi
        done
        
        # Check if any new content was generated
        if [ -n "$(git status --porcelain)" ]; then
          echo "New content generated, proceeding with build and deployment..."
          echo "FILES_CHANGED=true" >> $GITHUB_ENV
        else
          echo "No new content generated, skipping build."
          echo "FILES_CHANGED=false" >> $GITHUB_ENV
        fi

    - name: Build site
      if: success() && env.FILES_CHANGED == 'true'
      run: |
        npm run build
        
    - name: Commit and push changes
      if: success() && env.FILES_CHANGED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all changes
        git add .
        
        # Check if there are changes to commit
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "🤖 Automated content generation - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "Changes committed and pushed successfully"
        else
          echo "No changes to commit"
        fi

    - name: Deploy to production (if using Vercel/Netlify)
      if: success()
      run: |
        echo "Deployment will be triggered automatically by the git push"
        # If you need specific deployment commands, add them here
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "Content generation failed. Check the logs for details."
        # You can add notification logic here (Slack, email, etc.)
